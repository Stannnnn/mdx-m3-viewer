import { EventEmitter } from 'events';
import { lua_State } from 'fengari/src/lua';
import JassPlayer from './types/player';
import Thread from './thread';
import War3Map from '../../parsers/w3x/map';
import JassHandle from './types/handle';
import JassLocation from './types/location';
import JassTimer from './types/timer';
import { JassTrigger } from './types/index';
/**
 * A Jass2 context.
 */
export default class Context extends EventEmitter {
    L: lua_State;
    map: War3Map | null;
    handle: number;
    freeHandles: number[];
    handles: (JassHandle | null)[];
    name: string;
    description: string;
    players: JassPlayer[];
    actualPlayers: number;
    startLocations: JassLocation[];
    constantHandles: {
        playerColors: import("./types").JassPlayerColor[];
        races: import("./types").JassRace[];
        playerGameResults: import("./types").JassPlayerGameResult[];
        allianceTypes: import("./types").JassAllianceType[];
        versions: import("./types").JassVersion[];
        attackTypes: import("./types").JassAttackType[];
        damageTypes: import("./types").JassDamageType[];
        weaponTypes: import("./types").JassWeaponType[];
        pathingTypes: import("./types").JassPathingType[];
        mouseButtonTypes: import("./types/mousebuttontype").default[];
        racePrefs: import("./types").JassRacePreference[];
        mapControls: import("./types").JassMapControl[];
        gameTypes: import("./types").JassGameType[];
        mapFlags: import("./types").JassMapFlag[];
        placements: import("./types").JassPlacement[];
        startLocPrios: import("./types").JassStartLocPrio[];
        mapDensities: import("./types").JassMapDensity[];
        gameDifficulties: import("./types").JassGameDifficulty[];
        gameSpeeds: import("./types").JassGameSpeed[];
        playerSlotStates: import("./types").JassPlayerSlotState[];
        volumeGroups: import("./types").JassVolumeGroup[];
        gameStates: (import("./types").JassIGameState | import("./types").JassFGameState)[];
        playerStates: import("./types").JassPlayerState[];
        unitStates: import("./types").JassUnitState[];
        aiDifficulties: import("./types").JassAiDifficulty[];
        playerScores: import("./types").JassPlayerScore[];
        events: (import("./types").JassGameEvent | import("./types").JassPlayerEvent | import("./types").JassPlayerUnitEvent | import("./types").JassUnitEvent | import("./types").JassWidgetEvent | import("./types").JassDialogEvent)[];
        limitOps: import("./types").JassLimitOp[];
        unitTypes: import("./types").JassUnitType[];
        itemTypes: import("./types").JassItemType[];
        cameraFields: import("./types").JassCameraField[];
        blendModes: import("./types").JassBlendMode[];
        rarityControls: import("./types").JassRarityControl[];
        texMapFlags: import("./types").JassTexMapFlags[];
        fogStates: import("./types").JassFogState[];
        effectTypes: import("./types").JassEffectType[];
        soundTypes: import("./types").JassSoundType[];
    };
    timers: Set<JassTimer>;
    triggers: Set<JassTrigger>;
    threads: Set<Thread>;
    currentThread: Thread | null;
    enumUnit: JassHandle | null;
    filterUnit: JassHandle | null;
    enumPlayer: JassHandle | null;
    t: number;
    constructor();
    start(): void;
    step(): void;
    addHandle(handle: JassHandle): JassHandle;
    freeHandle(handle: JassHandle): void;
    call(name?: string | number): void;
    run(code: string, isJass: boolean): void;
    open(map: War3Map): void;
}
